#ifndef __18B20_H__
#define __18B20_H__

#include "delay.h"
//（默认）12位分辨率，温度位数为11位，温度转换时间超过750ms
/*******************************************************
指令：
					**********ROM操作*******************
			33H 读ROM中的编码、序列号
			55H 匹配ROM，此命令后紧跟64位ROM编码，多个芯片时使用
			F0H 搜索ROM 确定数量和ROM地址，多个芯片时使用
			CCH 跳过ROM 一个芯片时使用
			ECH 警告搜索 温度超过限值的芯片响应，多个芯片时使用
			
					**********RAM操作*******************
			44H 启动温度转换
			BEH 读RAM中9字节温度数据
			4EH 写RAM第2、3字节限值
			48H 复制RAM第2、3字节限值到EEPROM中
			B8H 重调EEPROM中数据恢复到RAM第2、3字节中
			B4H 读供电方式：0-寄生供电，1-外接电源
			
********************************************************/
/*******************************************************
	//12个DSl8B20，序列号为B8C530～B8C53B
const unsigned char NUM[12][8]={
{0x28,0x30,0xC5,0xB8,0x00,0x00,0x00,0x8E},//第 1 个器件的序列号
{0x28,0x31,0xC5,0xB8,0x00,0x00,0x00,0xB9},//第 2 个器件的序列号
{0x28,0x32,0xC5,0xB8,0x00,0x00,0x00,0xE0},//第 3 个器件的序列号
{0x28,0x33,0xC5,0xB8,0x00,0x00,0x00,0xD7},//第 4 个器件的序列号
{0x28,0x34,0xC5,0xB8,0x00,0x00,0x00,0x52},//第 5 个器件的序列号
{0x28,0x35,0xC5,0xB8,0x00,0x00,0x00,0x65},//第 6 个器件的序列号
{0x28,0x36,0xC5,0xB8,0x00,0x00,0x00,0x3C},//第 7 个器件的序列号
{0x28,0x37,0xC5,0xB8,0x00,0x00,0x00,0x0B},//第 8 个器件的序列号
{0x28,0x38,0xC5,0xB8,0x00,0x00,0x00,0x2F},//第 9 个器件的序列号
{0x28,0x39,0xC5,0xB8,0x00,0x00,0x00,0x18},//第 10 个器件的序列号
{0x28,0x3A,0xC5,0xB8,0x00,0x00,0x00,0x41},//第 11 个器件的序列号
};
*********************************************************/

sbit DQ=P2^6;			//DS18B20引脚

static unsigned char ROM_data[8];
bit Init_DS18B20(void);
unsigned char ReadOneChar(void);
void WriteOneChar(unsigned char dat);	
double ReadTemperature_m(unsigned char* ROM_D);
double ReadTemperature_s(void);
unsigned char* Read_ROM(void);

#endif